name: Combined Route Processing Workflow

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'route-data/geojson/**'
      - 'routes.json'

permissions:
  contents: write

jobs:
  update-route-data:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    outputs:
      has_route_changes: ${{ steps.changes_check.outputs.has_changes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install axios mkdirp

      - name: Run update script
        run: node action-scripts/update-routes.js

      - name: Check for route changes
        id: changes_check
        run: |
          if git diff-index --quiet HEAD -- 'route-data/geojson'; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit route changes
        if: ${{ steps.changes_check.outputs.has_changes == 'true' }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add route-data/geojson
          git commit -m "Automated update: Refreshed route data"
          git push

  generate-gtfs:
    runs-on: ubuntu-latest
    needs: update-route-data
    if: |
      ${{ needs.update-route-data.outputs.has_route_changes == 'true' || 
          github.event_name == 'push' }}

    steps:
      - name: Checkout repository with LFS
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          lfs: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install shapely

      - name: Generate GTFS
        run: python action-scripts/generate_gtfs.py

      - name: Configure Git LFS
        run: |
          git lfs install
          git lfs track "gtfs/stop_times.txt"
          echo "gtfs/stop_times.txt filter=lfs diff=lfs merge=lfs -text" >> .gitattributes
          git add .gitattributes

      - name: Package GTFS feed
        run: |
          mkdir -p otp-deploy
          (cd gtfs && zip -r ../otp-deploy/gtfs.zip .)

      - name: Commit GTFS artifacts
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git add gtfs otp-deploy/gtfs.zip
          if ! git diff --cached --quiet; then
            git commit -m "Auto-generated GTFS feed and gtfs.zip"
            git push
          fi

  build-otp-graph:
    runs-on: ubuntu-latest
    needs: generate-gtfs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Download OTP
        run: |
          mkdir -p otp
          curl -L https://github.com/opentripplanner/OpenTripPlanner/releases/download/v2.7.0/otp-shaded-2.7.0.jar -o otp/otp-shaded.jar

      - name: Build graph
        run: java -Xmx4G -jar otp/otp-shaded.jar --build --save ./otp-data

      - name: Commit graph.obj
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -f graph.obj ]]; then
            mv graph.obj otp-deploy/
            git add otp-deploy/graph.obj
            if ! git diff --cached --quiet; then
              git commit -m "Update graph.obj from OTP build"
              git push
            fi
          else
            echo "No graph.obj generated"
          fi
